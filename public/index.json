[
{
	"uri": "/1-introduce/1.1-amazon-eks/",
	"title": "Amazon EKS",
	"tags": [],
	"description": "",
	"content": "Amazon Elastic Container Service (ECS) Amazon Elastic Container Service (Amazon ECS), theo định nghĩa của AWS là một dịch vụ quản lý container có khả năng mở rộng cao, dễ dàng run, stop, hay quản lý docker container ở trong một cluster. Bạn có thể host một serverless infrastructure bằng cách chạy service hay task sử dụng Fargate launch type hoặc sử dụng EC2 launch type để chạy các EC2 instance. ECS chạy các container trong cluster dựa trên các EC2 được cài sẵn Docker. Bạn có thể dễ dàng quản lý các container của mình thông qua Cluster. ECS là một dịch vụ chạy theo region, và nó hoạt động trong VPC. Sau khi một cluster được khởi tạo và chạy, bạn có thể định nghĩa các task và services mà nó chỉ định Docker container image sẽ chạy thông qua clusters. ECS có hai dạng được triển khai là chạy trên các EC2 và serverless(fargate).\nCác thành phần khác Task definition Task definition là một bản thiết kế cho ứng dụng của bạn. Nó sẽ định nghĩa image nào được chạy trong container, giới hạn sử dụng CPU và bộ nhớ cho mỗi container được chạy. Lựa chọn các mode networking của Docker có trên AWS ECS và port.\nTask Mỗi một Task tương ứng với mỗi bản Task definition được chạy trên cluster. Nhiều task có thể được chạy bởi cùng một Task definition. Với mỗi một task sử dụng Fargate launch type có một ranh giới riêng biệt và không chia sẻ kernel, tài nguyên cpu, bộ nhớ, hay elastic network interface với task khác.\nService Xác định mức tối thiểu và tối đa của một hoặc nhiều Task từ một Task Definition chạy tại bất kỳ thời điểm nhất định nào. Đây là tính năng scale và cân bằng tải. Service còn quy định việc các task được chạy ở đâu ở các subnets.\n"
},
{
	"uri": "/3-eks-fargate/3.1-deploy-in-fargate/",
	"title": "Deploy ứng dụng trong Fargate",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Nội dung Amazon EKS Amazon Fargate Kubernetes cơ bản "
},
{
	"uri": "/2-prerequiste/2.1-create-cluster/",
	"title": "Khởi Tạo VPC",
	"tags": [],
	"description": "",
	"content": "KHỞI TẠO AWS VPC với CloudFormation Template Trong phần này chúng ta sẽ khởi tạo VPC thông qua Cloud Formation bằng cái tải lên file yml đã cấu hình sẵn theo link sau.\nTruy cập đến CloudFormation Management Console bằng cách gõ CloudFormation vào thanh tìm kiếm Trong giao diện của CloudFormation Nhấn chọn Create Stack Nhấn chọn With new resources (standard) Trong giao diện Create Stack Ở phần Prepare templete, nhấn chọn Templete is ready Ở phần Templete source, chọn Upload a templete file Nhấn vào Choose file để tải lên file đã tải về theo link ở trên Trong phần Specify stack details Điền tên stack vào Stack name. Ví dụ ECS. Điền tên của VPC vào phần Environment Name. Ví dụ ecs Nhấn Next để tiếp tục. Trong phần Configure stack options Nhấn Next để tiếp tục Trong phần Review Xem lại và kiểm tra các thông số và nhấn Submit để tiến hành khởi tạo VPC Sau khi chờ khoản 5 phút thì status của stack sẽ chuyển sang thành công. Truy cập đến VPC console bằng cách gõ VPC vào ô tìm kiếm và chọn VPC ở bên dưới. Dưới đây là thông tin VPC bạn vừa mới tạo "
},
{
	"uri": "/",
	"title": "Start EKS with fargate mode",
	"tags": [],
	"description": "",
	"content": "Làm việc với ECS - ECR Tổng quan Trong bài lab này, bạn sẽ tìm hiểu các khái niệm cơ bản và thực hành về ECS - ECR. Thực hành tạo các services chạy task trong các private subnets và gắn load balancing cho ECS.\nNội dung Giới thiệu Các bước chuẩn bị EKS với Fargate Dọn dẹp tài nguyên "
},
{
	"uri": "/1-introduce/1.2-amazon-fargate/",
	"title": "Amazon Fargate",
	"tags": [],
	"description": "",
	"content": "Amazon Elastic Container Service (ECS) Amazon Elastic Container Service (Amazon ECS), theo định nghĩa của AWS là một dịch vụ quản lý container có khả năng mở rộng cao, dễ dàng run, stop, hay quản lý docker container ở trong một cluster. Bạn có thể host một serverless infrastructure bằng cách chạy service hay task sử dụng Fargate launch type hoặc sử dụng EC2 launch type để chạy các EC2 instance. ECS chạy các container trong cluster dựa trên các EC2 được cài sẵn Docker. Bạn có thể dễ dàng quản lý các container của mình thông qua Cluster. ECS là một dịch vụ chạy theo region, và nó hoạt động trong VPC. Sau khi một cluster được khởi tạo và chạy, bạn có thể định nghĩa các task và services mà nó chỉ định Docker container image sẽ chạy thông qua clusters. ECS có hai dạng được triển khai là chạy trên các EC2 và serverless(fargate).\nCác thành phần khác Task definition Task definition là một bản thiết kế cho ứng dụng của bạn. Nó sẽ định nghĩa image nào được chạy trong container, giới hạn sử dụng CPU và bộ nhớ cho mỗi container được chạy. Lựa chọn các mode networking của Docker có trên AWS ECS và port.\nTask Mỗi một Task tương ứng với mỗi bản Task definition được chạy trên cluster. Nhiều task có thể được chạy bởi cùng một Task definition. Với mỗi một task sử dụng Fargate launch type có một ranh giới riêng biệt và không chia sẻ kernel, tài nguyên cpu, bộ nhớ, hay elastic network interface với task khác.\nService Xác định mức tối thiểu và tối đa của một hoặc nhiều Task từ một Task Definition chạy tại bất kỳ thời điểm nhất định nào. Đây là tính năng scale và cân bằng tải. Service còn quy định việc các task được chạy ở đâu ở các subnets.\n"
},
{
	"uri": "/2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "\rChúng ta sẽ khởi tạo 1 VPC với 2 public subnets, 2 private subnets, 1 internet gateway, default route cho các public subnets. 2 NAT gateway cho các private subnets. NAT gateway sẽ tốn phí nên cần xóa khi không sử dụng nữa.\nĐể tìm hiểu cách tạo VPC với public/private subnet các bạn có thể tham khảo bài lab :\nLàm việc với Amazon VPC Ở phần này chúng ta sẽ khởi tạo môi trường mạng để cho các service trong cluster cũng như load balancer được hoạt động. Dưới đây là kết quả sau khi tạo VPC và nơi các ECS được hoạt động. Nội dung Chuẩn bị VPC "
},
{
	"uri": "/3-eks-fargate/3.2-resource-allocation/",
	"title": "Phân bổ tài nguyên cho ứng dụng",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/3-eks-fargate/",
	"title": "EKS with Fargate mode",
	"tags": [],
	"description": "",
	"content": "\rChúng ta sẽ khởi tạo 1 VPC với 2 public subnets, 2 private subnets, 1 internet gateway, default route cho các public subnets. 2 NAT gateway cho các private subnets. NAT gateway sẽ tốn phí nên cần xóa khi không sử dụng nữa.\nĐể tìm hiểu cách tạo VPC với public/private subnet các bạn có thể tham khảo bài lab :\nLàm việc với Amazon VPC Ở phần này chúng ta sẽ khởi tạo môi trường mạng để cho các service trong cluster cũng như load balancer được hoạt động. Dưới đây là kết quả sau khi tạo VPC và nơi các ECS được hoạt động. Nội dung Khởi tạo cluster Phân bổ tài nguyên cho ứng dụng Scaling Workload "
},
{
	"uri": "/1-introduce/1.3-kubernetes-basic/",
	"title": "Kubernetes cơ bản",
	"tags": [],
	"description": "",
	"content": "Amazon Elastic Container Service (ECS) Amazon Elastic Container Service (Amazon ECS), theo định nghĩa của AWS là một dịch vụ quản lý container có khả năng mở rộng cao, dễ dàng run, stop, hay quản lý docker container ở trong một cluster. Bạn có thể host một serverless infrastructure bằng cách chạy service hay task sử dụng Fargate launch type hoặc sử dụng EC2 launch type để chạy các EC2 instance. ECS chạy các container trong cluster dựa trên các EC2 được cài sẵn Docker. Bạn có thể dễ dàng quản lý các container của mình thông qua Cluster. ECS là một dịch vụ chạy theo region, và nó hoạt động trong VPC. Sau khi một cluster được khởi tạo và chạy, bạn có thể định nghĩa các task và services mà nó chỉ định Docker container image sẽ chạy thông qua clusters. ECS có hai dạng được triển khai là chạy trên các EC2 và serverless(fargate).\nCác thành phần khác Task definition Task definition là một bản thiết kế cho ứng dụng của bạn. Nó sẽ định nghĩa image nào được chạy trong container, giới hạn sử dụng CPU và bộ nhớ cho mỗi container được chạy. Lựa chọn các mode networking của Docker có trên AWS ECS và port.\nTask Mỗi một Task tương ứng với mỗi bản Task definition được chạy trên cluster. Nhiều task có thể được chạy bởi cùng một Task definition. Với mỗi một task sử dụng Fargate launch type có một ranh giới riêng biệt và không chia sẻ kernel, tài nguyên cpu, bộ nhớ, hay elastic network interface với task khác.\nService Xác định mức tối thiểu và tối đa của một hoặc nhiều Task từ một Task Definition chạy tại bất kỳ thời điểm nhất định nào. Đây là tính năng scale và cân bằng tải. Service còn quy định việc các task được chạy ở đâu ở các subnets.\n"
},
{
	"uri": "/3-eks-fargate/3.3-scaling-workload/",
	"title": "Scaling workload",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/4-cleanup-resources/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Dọn dẹp tài nguyên Xóa services Chọn ecs-services sau đó nhấn Delete service Tiếp tục với các service còn lại Confirm Nhấn chọn Force delete service Gõ delete Nhấn Delete để xóa, tương tự với các confirm bên dưới Truy cập vào cluster sau đó nhấn Delete cluster, sau đó confirm để xóa Truy cập vào task definition đã tạo Nhấn chọn revision sau đó chọn Deregister ở phần Actions Confirm để xóa Chuyển filter sang Inactive task definitions Nhấn chọn revision sau đó chọn Delete ở phần Actions Confirm để xóa Truy cập vào Target groups Nhấn chọn target group đã tạo, sau đó nhấn Delete Confirm để xóa Truy cập vào Load balancers Nhấn chọn load balancer đã tạo, sau đó nhấn Delete load balancer Confirm để xóa Truy cập vào Security groups Nhấn chọn security group đã tạo, sau đó nhấn Delete security groups Confirm để xóa Xóa ecs_port_container_sg trước, sau đó mới xóa ecs_public_port_sg\nTruy cập vào Cloud Formation Nhấn chọn stack đã tạo, sau đó nhấn Delete Confirm để xóa Truy cập vào Amazon ECR Nhấn chọn repository đã tạo, sau đó nhấn Delete Confirm để xóa "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]